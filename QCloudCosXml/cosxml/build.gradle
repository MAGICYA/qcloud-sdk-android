apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 2
        versionName "cos-xml-android-sdk-1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug{
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile project(':network')

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    //compile 'com.alibaba:fastjson:1.2.35'
    compile 'org.slf4j:slf4j-android:1.6.1-RC1'
    compile ('com.thoughtworks.xstream:xstream:1.4.7') {
        exclude group: 'xmlpull', module: 'xmlpull'
    }
}
//def jarName = "cos-xml-android-sdk-1.0.jar";
//task Jar(type: Jar){
//    destinationDir = file(project.buildDir.absolutePath)
//    archiveName = jarName
//    def srcClassDir = [project(":network").buildDir.absolutePath + "/intermediates/classes/release",
//                       project(":cosxml").buildDir.absolutePath + "/intermediates/classes/release"]
//    from srcClassDir
//    exclude '**/BuildConfig.class'
//    exclude '**/R.class'
//    exclude '**/R$*.class'
//    exclude "android/view/*.class"
//}

task Jar(type: Copy, dependsOn: build){
    delete 'build/libs/'
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    rename ('classes.jar', 'cos-xml-android-sdk-1.1.jar')
}




apply from: 'install.gradle'
apply from: 'bintray.gradle'